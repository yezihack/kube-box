# deployment(podAntiAffinity) + service + ingress
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-box
  namespace: default
  labels:
    app: kube-box
spec:
  selector:
    matchLabels:
      app: kube-box
  replicas: 5
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kube-box
    spec:
      affinity:  #亲和性设置
          # podAntiAffinity: #设置pod反亲和性
          #   requiredDuringSchedulingIgnoredDuringExecution: # 硬限制
          #   - labelSelector:
          #       matchExpressions: # 匹配podenv的值在["pro"]中的标签
          #       - key: podenv
          #         operator: In
          #         values: ["pro"]
          #     topologyKey: kubernetes.io/hostname
          podAntiAffinity: #设置pod反亲和性
            preferredDuringSchedulingIgnoredDuringExecution: # 软限制
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - kube-box
                topologyKey: kubernetes.io/hostname
      containers:        
        - name: kube-box
          image: sgfoot/kube-box:latest
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 100m
              memory: 100Mi
          livenessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
          ports:
            - containerPort: 80
              name: server
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: kube-box
  namespace: default
spec:
  selector:
    app: kube-box
  type: ClusterIP
  ports:
  - name: client
    protocol: TCP
    port: 8080
    targetPort: server

---
# https://kubernetes.io/docs/concepts/services-networking/ingress/#the-ingress-resource

# apiVersion: networking.k8s.io/v1
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: kube-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/client-body-buffer-size: "10m"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  rules:
  - host: kube-box.io
    http:
      paths:
      - path: /                 # # curl kube-box.io/
        backend:
          serviceName: kube-box
          servicePort: client
      - path: /kube-box(/|$)(.*) # curl kube-box.io/kube-box
        backend:
          serviceName: kube-box
          servicePort: client